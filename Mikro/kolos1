
1. 
cykl zegarowy - odwrotność częstotliwości generatora zegarowego
cykl maszynowy - okres wewnętrznego sygnału zegarowego, wielokrotność cyklu zegarowego, okres, podczas którego następuje wymiana danych między procesorem a pamięcią lub układem I/O
cykl instrukcji - składa się z jednego lub kilku cykli maszynowych i określa czas niezbędny do wykonania instrukcji - każda instrukcja w zależności od trybu adresowania ma określony cykl instrukcji

w mikroprocku z labek cykl instrukcji = 4 cykle zegara = 4 cykle maszynowe

2. 
architektura harwardzka - osobne pamięci na kod i dane, prostszy, szybszy
architektur von Neumana - kod i dane w jednej pamięci

CISC - komputer o złożonej liście rozkazów - duża liczba rozkazów (100 - 300), duża liczba trybów adresowania, mała liczba rejestrów roboczych, rozkazy zróżnicowane pod względem długości słowa rozkazowego i liczby argumentów, układ sterowania jest mikroprogramowy

RISC - komputer o zredukowaniej liście rozkazów - ograniczona lista rozkazów (do 128), rozkazy realizują proste czynności, mała liczba trybów adresowania, ujednolicona forma rozkazów (jednakowa długość słowa rozkazowego), ujednolicony czas wykonania rozkazów, układ sterowania jest sprzętowy

mikro z labów - organizacja 4 bitowa (rejestry), 16 bitowa przestrzeń adresowa, szerokość instrukcji - 8 bitów

3.
skoki - bezwarunkowe
przesłania - rejestr-rejestr, pamięć-rejestr, rejestr-pamięć, stała-rejestr
obliczenia - dodawanie wartości 2 rejestrów
 
4. 
rejestry mikroprocesora:
mikro z lab: 2 rejestry ogólnego przeznaczenia, 1 rejestr licznika programu (4bit)

5.
dane są przetwarzane potokowo, ale tylko jeden potok w jednym czasie - brak przetwarzania równoległego
4 cykle zegarowe na 1 instrukcję


--------------------------------------------------------------------------------------

1.
debuggowanie przez printf: 
wady - czas na wyświetlenie komunikatu może opóźnić w sposób trudny do przewidzenia działanie programu, wywołanie printf może zmodyfikować stan rejestrów, program może stać się nieczytelny, okno terminala może zostać zaśmiecone dużą ilością danych
zalety - przydatny gdy nie możemy zatrzymać działania programu

OpenOCD - do obsługi sprzętowego debuggera i programowania pamięci flash
gcc - do kompilacji

JTAG - protokół do stetowania układów scalonych i połączeń na płytkach drukowanych - zadawanie wektorów testowych, sprawdzanie reakcji układów, interface synchroniczny, szeregowy, z dodatkowymi liniami sterującymi (reset, NRST) - można programować w gotowym urządzeniu, bez odłączania go
SWD - 2 piny, ten sam protokół co JTAG - są analogiczne

UART - układ scalony do asynchronicznego przekazywania i odbierania informacji przez port szeregowy

programator - układ, który otrzymuje dane od komputera np. przez interface USB i konwertuje je według odpowiedniego dla danego urządzenia algorytmu programowania 


2.
rejestry mikroprocesora - niewielka liczba bitów (8, 16, 32, 64) szybkiej pamięci, łatwo dostępnej dla rdzenia procesora, znajdują się w procesorze
rejestry układów peryferyjnych:
- rejsetry robocze - zawierają wynik ich działania
- rejestry sterujące - służą do sterowania układem peryferyjnym (głównie te)
- rejestry statusu - zawierają aktualny stan urządzenia - flagi przerwań, błędy itp.

3. 
skrypt linkera - definiuje w jaki sposób kod programu i zmienne są rozmieszczone w pamięci procesora, można ustalić rozmiar ROM, RAM, stosu, adresy startowe


--------------------------------------------------------------------------------------


1. --

2. gpio mogą pracować jako wyjścia/wejścia sygnałów cyfrowych, mogą słóżyć np. włączania diod led czy odczytywania stanów przełączników

3. w nowoczesnych mikrokontrolerach ich praca może być dodatkowo konfigurowana, są rezystory pull-up lub pull-down, mogą być skonfigurowane np. w konfiguracji otwarty dren

4. można na nich zrobić interfejsy I2C, SPI, Paralell ATA

5. jednak nie są one tak wydajne jak rozwiązania wspomagane sprzętowo





























